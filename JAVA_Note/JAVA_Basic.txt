[자바의 자료형]
<Primitive Type> : 실제 저장한 값들이 들어있는 자료형
	1. 숫자형
		a)정수형 - byte, short, int(default), long
		b)실수형 - float, double(default)
	2. 문자형
		- char
	3. 논리형
		-boolean

<Reference Type(Non-Primitive)> : 값이 저장된 레퍼런스(주소)가 들어있는 자료형
	premitive type이 아닌 모든 자료형 - 배열(문자열) 등등..



[형변환]
자료형을 바꾸는 행위, 객체간(reference type) 형변환의 경우에는 상속관계를 가지고 형변환을 한다.
자바의 boolean은 형변환이 불가하다. 상수로 True와 False만 사용
<묵시적 형변환> : up-casting
	특별히 명시하지 않아도 자동으로 수행(작은 자료형이 큰 자료형에 맞춰짐)
	ex) int + float -> float + float

<명시적 형변환> : down-casting
	직접 형변환을 명시하여 변경함(주로 큰 자료형에서 작은 자료형으로)
	ex) int + (int)float -> int + int



[조건문]
<if - else if - else문>
	true, false에 따라 코드 실행여부 결정
	if(조건식){

	}else if(조건식){

	}else{

	}

<switch - case 문>
	값들 동등비교 / 다중 분기
	switch(비교대상){
	case (비교값):

		break;
	case (비교값):

		break;
	default:
	}



[반복문]
<for문>
	for(초기치; 조건식; 증가치){

	}

<foreach문>
	for(데이터타입 변수명: 이터러블타입){

	}

<while문>
	while(조건식){

	}

<do-while문>
	do{

	}while(조건식)
	


[제어문]
	continue : 다음 반복으로 건너 뜀
	break : 반복 중단



[배열(Array) : 객체type] = 동형집합
같은 자료형들을 연속된 공간에 저장하여 집합단위로 일괄처리하기 위해 사용
	ex) 데이터타입[] 배열명 = new 데이터타입[크기];
	int[] int = new int[3];
<Primitive type array>
<Reference type array>



[기타]
자바는 객체 생성이 무조건 heap에 올라감. 생선된 위치는 중요하지 않음.
-> 객체 생성시 자동으로 default값으로 초기화 된다.
어드레스와 레퍼런스는 다른 개념!